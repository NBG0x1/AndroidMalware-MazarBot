FAQ по чистке софта от АВ.

Сигнатуры АВ бывают двух типов - синтаксические и семантические.

При это на данный момент все АВ под Андроид используют статический анализ, никакого
Runtime-анализа пока они не умеют. Не позволяют ресурсы девайсов и системные ограничения.

Тем не менее, второй тип сигнатуры убрать затруднительно даже при полном знании workflow софта, 
так как в данном случае антивирус детектирует именно логику кода, а не полностью статические неизменяемые константы.

Убрать такие сигнатуры возможно лишь когда они завязаны на синтаксические. То есть, когда
АВ перед запуском детекта по семантической сигнатуре запускает анализ по синтаксической. Это, так называемые,
смешанные сигнатуры.
Простейший пример - имя пакета софта под Андроид, это вещь статическая и неизменяемая.
Например, в 2011-2013 годах особенно популярно у АВ было запускать семантику только после того, как он убедился, что имя
пакета софта совпадает с именем пакета одного из вирусов. Таким образом, чистка была простейшей - замена имени пакета.

Сейчас количество подобных сигнатур у таких АВ как Касперский или Аваст составляет от 50 до 80%, примерно.
Обычно они наносят 4-5 сигнатуры на софт, из которых 3-4 сигнатуры - это смешанные, а одна оставшаяся - чисто семантическая.
Так как семантическую сигнатуру почистить трудно и затратно по времени (до 5 часов на софт типа этого), то чистят
обычно только смешанные, обрезая им синтаксическую базу. А одной семантической сигнатуры в большинстве случаев
АВ недостаточно для принятия решения. Скорее всего софт будет после такой проверки отправлен к экспертам, и на 
него будут установлены новые сигнатуры.

Чтобы обрезать синтаксическую базу, нужно найти на что цепляется сигнатура. В Яве она может цепляться на сигнатуры методов,
строковые константы, названия классов и полей классов. Это основное. Также может цепляться на XML, но это уже реже.
Таким образом, обычно чистка сводится к поиску названия метода, на которое была установлена сигнатура. Например, опытным
путём было вычислено, что метод sendSMS был взят АВ в качестве базы, значит для чистки нужно просто его переименовать.
Если за базу была взята сигнатура метода, то нужно по правилам языка JAVA её изменить, поменять местами например, или объединить какие-то
параметры в одну структуру, а другие оставить нетронутыми.
Короче говоря, любые имена, встречающиеся в софте, а особенно строковые константы находятся в группе риска. При чистке
нужно искать на какое имя или строку зацепляется АВ, частично комментируя код и проверяя отпадает ли сигнатура 
при его отсутствии в результирующем APK. Если отпадает, значит, скорее всего, этот код установлен в качестве синтаксической базы.

АВ типа Аваста обычно действуют по методу Касперского, однако число сигнатур всегда меньше в 3-4 раза (сказывается
небольшое финансирование экспертов-аналитиков). Чистка практически не отличается от Касперского.

АВ типа Eset Nod32 и Dr.Web используют обычно только семантику, смешанные сигнатуры почти отсутствуют. Чистка считается обычно не оправданной
из-за временных затрат. 