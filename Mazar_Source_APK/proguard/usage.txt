com.android.internal.telephony.IExtendedNetworkService$Stub:
    private static final java.lang.String DESCRIPTOR
    static final int TRANSACTION_setMmiString
    static final int TRANSACTION_getMmiRunningText
    static final int TRANSACTION_getUserMessage
    static final int TRANSACTION_clearMmiString
    26:33:public static com.android.internal.telephony.IExtendedNetworkService asInterface(android.os.IBinder)
com.android.internal.telephony.IExtendedNetworkService$Stub$Proxy
com.google.i18n.phonenumbers.AlternateFormatsCountryCodeSet
com.google.i18n.phonenumbers.AsYouTypeFormatter
com.google.i18n.phonenumbers.CountryCodeToRegionCodeMap:
    28:28:public CountryCodeToRegionCodeMap()
com.google.i18n.phonenumbers.MetadataManager
com.google.i18n.phonenumbers.PhoneNumberMatch
com.google.i18n.phonenumbers.PhoneNumberMatcher
com.google.i18n.phonenumbers.PhoneNumberMatcher$NumberGroupingChecker
com.google.i18n.phonenumbers.PhoneNumberMatcher$State
com.google.i18n.phonenumbers.PhoneNumberUtil:
    static final int REGEX_FLAGS
    private static final int MIN_LENGTH_FOR_NSN
    static final int MAX_LENGTH_FOR_NSN
    static final int MAX_LENGTH_COUNTRY_CODE
    private static final int MAX_INPUT_STRING_LENGTH
    private static final java.lang.String META_DATA_FILE_PREFIX
    private static final java.lang.String UNKNOWN_REGION
    private static final int NANPA_COUNTRY_CODE
    private static final java.lang.String COLOMBIA_MOBILE_TO_FIXED_LINE_PREFIX
    static final char PLUS_SIGN
    private static final char STAR_SIGN
    private static final java.lang.String RFC3966_EXTN_PREFIX
    private static final java.lang.String RFC3966_PREFIX
    private static final java.lang.String RFC3966_PHONE_CONTEXT
    private static final java.lang.String RFC3966_ISDN_SUBADDRESS
    static final java.lang.String VALID_PUNCTUATION
    private static final java.lang.String DIGITS
    static final java.lang.String PLUS_CHARS
    private static final java.lang.String VALID_START_CHAR
    private static final java.lang.String SECOND_NUMBER_START
    private static final java.lang.String UNWANTED_END_CHARS
    private static final java.lang.String DEFAULT_EXTN_PREFIX
    private static final java.lang.String CAPTURING_EXTN_DIGITS
    public static final java.lang.String REGION_CODE_FOR_NON_GEO_ENTITY
    794:794:static java.lang.String normalizeDiallableCharsOnly(java.lang.String)
    802:802:public static java.lang.String convertAlphaCharactersInNumber(java.lang.String)
    847:861:public int getLengthOfGeographicalAreaCode(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber)
    900:931:public int getLengthOfNationalDestinationCode(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber)
    943:946:public static java.lang.String getCountryMobileToken(int)
    992:992:public java.util.Set getSupportedRegions()
    1000:1000:public java.util.Set getSupportedGlobalNetworkCallingCodes()
    1046:1046:static boolean formattingRuleHasFirstGroupOnly(java.lang.String)
    1061:1064:boolean isNumberGeographical(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber)
    1079:1079:private boolean hasValidCountryCallingCode(int)
    1097:1110:public java.lang.String format(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber,com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat)
    1120:1147:public void format(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber,com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat,java.lang.StringBuilder)
    1163:1209:public java.lang.String formatByPattern(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber,com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat,java.util.List)
    1224:1243:public java.lang.String formatNationalNumberWithCarrierCode(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.String)
    1272:1272:public java.lang.String formatNationalNumberWithPreferredCarrierCode(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.String)
    1291:1365:public java.lang.String formatNumberForMobileDialing(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.String,boolean)
    1388:1446:public java.lang.String formatOutOfCountryCallingNumber(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.String)
    1466:1558:public java.lang.String formatInOriginalFormat(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.String)
    1565:1578:private boolean rawInputContainsNationalPrefix(java.lang.String,java.lang.String,java.lang.String)
    1586:1586:private boolean hasUnexpectedItalianLeadingZero(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber)
    1590:1600:private boolean hasFormattingPatternForNumber(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber)
    1629:1713:public java.lang.String formatOutOfCountryKeepingAlphaChars(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.String)
    1741:1754:private void prefixNumberWithCountryCallingCode(int,com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat,java.lang.StringBuilder)
    1760:1760:private java.lang.String formatNsn(java.lang.String,com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata,com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat)
    1771:1779:private java.lang.String formatNsn(java.lang.String,com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata,com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat,java.lang.String)
    1786:1797:com.google.i18n.phonenumbers.Phonemetadata$NumberFormat chooseFormattingPatternForNumber(java.util.List,java.lang.String)
    1804:1804:java.lang.String formatNsnUsingPattern(java.lang.String,com.google.i18n.phonenumbers.Phonemetadata$NumberFormat,com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat)
    1813:1851:private java.lang.String formatNsnUsingPattern(java.lang.String,com.google.i18n.phonenumbers.Phonemetadata$NumberFormat,com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat,java.lang.String)
    1863:1863:public com.google.i18n.phonenumbers.Phonenumber$PhoneNumber getExampleNumber(java.lang.String)
    1878:1890:public com.google.i18n.phonenumbers.Phonenumber$PhoneNumber getExampleNumberForType(java.lang.String,com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType)
    1902:1916:public com.google.i18n.phonenumbers.Phonenumber$PhoneNumber getExampleNumberForNonGeoEntity(int)
    1926:1937:private void maybeAppendFormattedExtension(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber,com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata,com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat,java.lang.StringBuilder)
    1940:1963:com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getNumberDescByType(com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata,com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType)
    1974:1980:public com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberType getNumberType(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber)
    2192:2193:public java.util.List getRegionCodesForCountryCode(int)
    2205:2212:public int getCountryCodeForRegion(java.lang.String)
    2246:2264:public java.lang.String getNddPrefixForRegion(java.lang.String,boolean)
    2273:2273:public boolean isNANPACountry(java.lang.String)
    2282:2288:boolean isLeadingZeroPossible(int)
    2302:2308:public boolean isAlphaNumber(java.lang.String)
    2318:2318:public boolean isPossibleNumber(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber)
    2372:2399:public com.google.i18n.phonenumbers.PhoneNumberUtil$ValidationResult isPossibleNumberWithReason(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber)
    2423:2425:public boolean isPossibleNumber(java.lang.String,java.lang.String)
    2437:2452:public boolean truncateTooLongNumber(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber)
    2463:2463:public com.google.i18n.phonenumbers.AsYouTypeFormatter getAsYouTypeFormatter(java.lang.String)
    2807:2809:public com.google.i18n.phonenumbers.Phonenumber$PhoneNumber parseAndKeepRawInput(java.lang.String,java.lang.String)
    2819:2820:public void parseAndKeepRawInput(java.lang.String,java.lang.String,com.google.i18n.phonenumbers.Phonenumber$PhoneNumber)
    2835:2835:public java.lang.Iterable findNumbers(java.lang.CharSequence,java.lang.String)
    2856:2856:public java.lang.Iterable findNumbers(java.lang.CharSequence,java.lang.String,com.google.i18n.phonenumbers.PhoneNumberUtil$Leniency,long)
    3071:3122:public com.google.i18n.phonenumbers.PhoneNumberUtil$MatchType isNumberMatch(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber,com.google.i18n.phonenumbers.Phonenumber$PhoneNumber)
    3128:3131:private boolean isNationalNumberSuffixOfTheOther(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber,com.google.i18n.phonenumbers.Phonenumber$PhoneNumber)
    3148:3171:public com.google.i18n.phonenumbers.PhoneNumberUtil$MatchType isNumberMatch(java.lang.String,java.lang.String)
    3188:3217:public com.google.i18n.phonenumbers.PhoneNumberUtil$MatchType isNumberMatch(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.String)
    3231:3238:boolean canBeInternationallyDialled(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber)
    3249:3254:public boolean isMobileNumberPortableRegion(java.lang.String)
com.google.i18n.phonenumbers.PhoneNumberUtil$2
com.google.i18n.phonenumbers.PhoneNumberUtil$3
com.google.i18n.phonenumbers.PhoneNumberUtil$Leniency
com.google.i18n.phonenumbers.PhoneNumberUtil$Leniency$1
com.google.i18n.phonenumbers.PhoneNumberUtil$Leniency$2
com.google.i18n.phonenumbers.PhoneNumberUtil$Leniency$3
com.google.i18n.phonenumbers.PhoneNumberUtil$Leniency$3$1
com.google.i18n.phonenumbers.PhoneNumberUtil$Leniency$4
com.google.i18n.phonenumbers.PhoneNumberUtil$Leniency$4$1
com.google.i18n.phonenumbers.PhoneNumberUtil$MatchType
com.google.i18n.phonenumbers.PhoneNumberUtil$PhoneNumberFormat
com.google.i18n.phonenumbers.Phonemetadata:
    31:31:private Phonemetadata()
com.google.i18n.phonenumbers.Phonemetadata$NumberFormat:
    private static final long serialVersionUID
    48:48:public static com.google.i18n.phonenumbers.Phonemetadata$NumberFormat$Builder newBuilder()
    54:54:public boolean hasPattern()
    55:55:public java.lang.String getPattern()
    65:65:public boolean hasFormat()
    66:66:public java.lang.String getFormat()
    76:76:public java.util.List leadingDigitPatterns()
    80:80:public java.lang.String getLeadingDigitsPattern(int)
    83:87:public com.google.i18n.phonenumbers.Phonemetadata$NumberFormat addLeadingDigitsPattern(java.lang.String)
    93:93:public boolean hasNationalPrefixFormattingRule()
    94:94:public java.lang.String getNationalPrefixFormattingRule()
    101:103:public com.google.i18n.phonenumbers.Phonemetadata$NumberFormat clearNationalPrefixFormattingRule()
    110:110:public boolean hasNationalPrefixOptionalWhenFormatting()
    112:112:public boolean isNationalPrefixOptionalWhenFormatting()
    123:123:public boolean hasDomesticCarrierCodeFormattingRule()
    125:125:public java.lang.String getDomesticCarrierCodeFormattingRule()
    133:150:public com.google.i18n.phonenumbers.Phonemetadata$NumberFormat mergeFrom(com.google.i18n.phonenumbers.Phonemetadata$NumberFormat)
com.google.i18n.phonenumbers.Phonemetadata$NumberFormat$Builder
com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata:
    private static final long serialVersionUID
    307:307:public static com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata$Builder newBuilder()
    313:313:public boolean hasGeneralDesc()
    327:327:public boolean hasFixedLine()
    341:341:public boolean hasMobile()
    355:355:public boolean hasTollFree()
    369:369:public boolean hasPremiumRate()
    383:383:public boolean hasSharedCost()
    397:397:public boolean hasPersonalNumber()
    411:411:public boolean hasVoip()
    425:425:public boolean hasPager()
    439:439:public boolean hasUan()
    453:453:public boolean hasEmergency()
    454:454:public com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getEmergency()
    467:467:public boolean hasVoicemail()
    481:481:public boolean hasShortCode()
    482:482:public com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getShortCode()
    495:495:public boolean hasStandardRate()
    496:496:public com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getStandardRate()
    509:509:public boolean hasCarrierSpecific()
    510:510:public com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getCarrierSpecific()
    523:523:public boolean hasNoInternationalDialling()
    524:524:public com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getNoInternationalDialling()
    537:537:public boolean hasId()
    538:538:public java.lang.String getId()
    548:548:public boolean hasCountryCode()
    559:559:public boolean hasInternationalPrefix()
    570:570:public boolean hasPreferredInternationalPrefix()
    571:571:public java.lang.String getPreferredInternationalPrefix()
    581:581:public boolean hasNationalPrefix()
    582:582:public java.lang.String getNationalPrefix()
    592:592:public boolean hasPreferredExtnPrefix()
    593:593:public java.lang.String getPreferredExtnPrefix()
    603:603:public boolean hasNationalPrefixForParsing()
    614:614:public boolean hasNationalPrefixTransformRule()
    625:625:public boolean hasSameMobileAndFixedLinePattern()
    636:636:public java.util.List numberFormats()
    640:640:public com.google.i18n.phonenumbers.Phonemetadata$NumberFormat getNumberFormat(int)
    643:647:public com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata addNumberFormat(com.google.i18n.phonenumbers.Phonemetadata$NumberFormat)
    654:654:public java.util.List intlNumberFormats()
    658:658:public com.google.i18n.phonenumbers.Phonemetadata$NumberFormat getIntlNumberFormat(int)
    662:666:public com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata addIntlNumberFormat(com.google.i18n.phonenumbers.Phonemetadata$NumberFormat)
    669:670:public com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata clearIntlNumberFormat()
    676:676:public boolean hasMainCountryForCode()
    677:677:public boolean isMainCountryForCode()
    680:680:public boolean getMainCountryForCode()
    701:701:public boolean hasLeadingZeroPossible()
    702:702:public boolean isLeadingZeroPossible()
    712:712:public boolean hasMobileNumberPortableRegion()
    713:713:public boolean isMobileNumberPortableRegion()
com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata$Builder
com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection:
    private static final long serialVersionUID
    1012:1012:public static com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection$Builder newBuilder()
    1024:1028:public com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection addMetadata(com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadata)
    1049:1050:public com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection clear()
com.google.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection$Builder
com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc:
    private static final long serialVersionUID
    205:205:public static com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc$Builder newBuilder()
    222:222:public boolean hasPossibleNumberPattern()
    233:233:public boolean hasExampleNumber()
    234:234:public java.lang.String getExampleNumber()
    242:251:public com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc mergeFrom(com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc)
    255:255:public boolean exactlySameAs(com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc)
com.google.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc$Builder
com.google.i18n.phonenumbers.Phonenumber:
    28:28:private Phonenumber()
com.google.i18n.phonenumbers.Phonenumber$PhoneNumber:
    private static final long serialVersionUID
    45:45:public boolean hasCountryCode()
    53:55:public com.google.i18n.phonenumbers.Phonenumber$PhoneNumber clearCountryCode()
    61:61:public boolean hasNationalNumber()
    69:71:public com.google.i18n.phonenumbers.Phonenumber$PhoneNumber clearNationalNumber()
    88:90:public com.google.i18n.phonenumbers.Phonenumber$PhoneNumber clearExtension()
    104:106:public com.google.i18n.phonenumbers.Phonenumber$PhoneNumber clearItalianLeadingZero()
    120:122:public com.google.i18n.phonenumbers.Phonenumber$PhoneNumber clearNumberOfLeadingZeros()
    128:128:public boolean hasRawInput()
    139:141:public com.google.i18n.phonenumbers.Phonenumber$PhoneNumber clearRawInput()
    177:179:public com.google.i18n.phonenumbers.Phonenumber$PhoneNumber clearPreferredDomesticCarrierCode()
    183:191:public final com.google.i18n.phonenumbers.Phonenumber$PhoneNumber clear()
    195:219:public com.google.i18n.phonenumbers.Phonenumber$PhoneNumber mergeFrom(com.google.i18n.phonenumbers.Phonenumber$PhoneNumber)
com.google.i18n.phonenumbers.RegexCache:
    46:46:boolean containsRegex(java.lang.String)
com.google.i18n.phonenumbers.RegexCache$LRUCache:
    74:74:public synchronized boolean containsKey(java.lang.Object)
com.google.i18n.phonenumbers.ShortNumberInfo
com.google.i18n.phonenumbers.ShortNumberInfo$1
com.google.i18n.phonenumbers.ShortNumberInfo$ShortNumberCost
com.google.i18n.phonenumbers.ShortNumberUtil
com.google.i18n.phonenumbers.ShortNumberUtil$ShortNumberCost
com.google.i18n.phonenumbers.ShortNumbersRegionCodeSet
com.slempo.service.BuildConfig
com.slempo.service.Constants
com.slempo.service.MainService:
    private static final java.lang.String CONTENT_SMS
    private static final int MESSAGE_TYPE_SENT
    private static android.location.LocationManager locationManager
    139:142:private void initLocation()
    145:145:public static android.location.Location getLocation()
com.slempo.service.R
com.slempo.service.R$anim
com.slempo.service.R$array
com.slempo.service.R$attr
com.slempo.service.R$bool
com.slempo.service.R$color
com.slempo.service.R$dimen
com.slempo.service.R$drawable
com.slempo.service.R$id
com.slempo.service.R$integer
com.slempo.service.R$layout
com.slempo.service.R$string
com.slempo.service.R$style
com.slempo.service.R$styleable
com.slempo.service.R$xml
com.slempo.service.SDCardServiceStarter:
    public static final java.lang.String ACTION
com.slempo.service.ServiceStarter:
    public static final java.lang.String ACTION
com.slempo.service.billing.CreditCardType:
    52:55:public static com.slempo.service.billing.CreditCardType getTypeForNumber(java.lang.String)
    70:76:public java.lang.String concealNumber(java.lang.String)
com.slempo.service.utils.Lists:
    7:7:public Lists()
    13:13:public static java.util.ArrayList newArrayList(int)
    17:22:public static java.util.ArrayList newArrayList(java.util.Collection)
    27:31:public static java.util.ArrayList newArrayList(java.lang.Object[])
    35:35:public static java.util.LinkedList newLinkedList()
com.slempo.service.utils.ObjectSerializer:
    10:10:public ObjectSerializer()
com.slempo.service.utils.Parser:
    3:3:public Parser()
com.slempo.service.utils.Sender:
    public static final java.lang.String INITIAL_DATA_IS_SENT
    public static final java.lang.String UPDATE_MAIN_UI
    18:18:public Sender()
    288:300:public static void sendGPSData(android.content.Context,java.lang.String,java.lang.String)
com.slempo.service.utils.SmsProcessor:
    244:244:public java.lang.String getControlNumber()
com.slempo.service.utils.Utils:
    23:23:public Utils()
